{"ast":null,"code":"var _jsxFileName = \"/Users/tharminithalayasingam/Documents/hole React/2014-07-18/hh/reactcharts/reactcharts/src/components/Chart.jsx\";\n\n/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the 'License'); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n *\n */\nimport React, { Component } from \"../../node_modules/react\";\nimport { Bar } from \"../../node_modules/react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { withStyles } from '@material-ui/core/styles';\nconst PageWrapper = withStyles({\n  root: {\n    padding: '30px',\n    background: 'transparent',\n    boxShadow: 'none'\n  }\n})(Paper); //var randomColor = require(\"randomcolor\"); // import the script\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      timeStamp: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const getProductNamesURL = \"http://\" + process.env.REACT_APP_HOST + \":\" + process.env.REACT_APP_PORT + \"/gitIssues/issueCount\";\n    axios.create({\n      withCredentials: false\n    }).get(getProductNamesURL).then(res => {\n      var response = res.data;\n      var ProductName = response.map(function (e) {\n        return e.ProductName;\n      });\n      var L1IssueCount = response.map(function (e) {\n        return e.L1IssueCount;\n      });\n      var L2IssueCount = response.map(function (e) {\n        return e.L2IssueCount;\n      });\n      var L3IssueCount = response.map(function (e) {\n        return e.L3IssueCount;\n      });\n      this.setState({\n        timeStamp: moment.unix(res.data[0]['TimeStamp'] / 1000).format('YYYY-MM-DD:hh:mm:ss'),\n        chartData: {\n          labels: ProductName,\n          datasets: [{\n            label: \"L1 IssueCount\",\n            data: L1IssueCount,\n            backgroundColor: '#d4c70e'\n          }, {\n            label: \"L2 IssueCount\",\n            data: L2IssueCount,\n            backgroundColor: '#d45810'\n          }, {\n            label: \"L3 IssueCount\",\n            data: L3IssueCount,\n            backgroundColor: '#920d08'\n          }]\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.timeStamp && React.createElement(\"div\", {\n      style: {\n        color: \"rgb(5, 80, 129)\",\n        display: 'flex',\n        paddingTop: \"10px\",\n        paddingLeft: \"10px\",\n        flexFlow: \"row-reverse\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" \", this.state.timeStamp), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Last Updated TimeStamp- \")), React.createElement(Bar, {\n      data: this.state.chartData,\n      options: {\n        \"hover\": {\n          \"animationDuration\": 0\n        },\n        \"animation\": {\n          \"duration\": 1,\n          \"onComplete\": function () {\n            var chartInstance = this.chart,\n                ctx = chartInstance.ctx;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'bottom';\n            this.data.datasets.forEach(function (dataset, i) {\n              var meta = chartInstance.controller.getDatasetMeta(i);\n              meta.data.forEach(function (bar, index) {\n                var data = dataset.data[index];\n\n                if (data !== 0) {\n                  ctx.fillText(data, bar._model.x, bar._model.y - 5);\n                }\n              });\n            });\n          }\n        },\n        title: {\n          width: 320\n        },\n        scales: {\n          xAxes: [{\n            barPercentage: 1,\n            barThickness: 43,\n            maxBarThickness: 98,\n            minBarLength: 0,\n            gridLines: {\n              display: true,\n              drawBorder: true,\n              offsetGridLines: true,\n              color: \" #d5dee2\",\n              drawTicks: true,\n              drawOnChartArea: true,\n              circular: true\n            }\n          }],\n          yAxes: [{\n            barPercentage: 0.5,\n            barThickness: 43,\n            maxBarThickness: 48,\n            minBarLength: 0,\n            gridLines: {\n              display: true,\n              drawBorder: true,\n              offsetGridLines: true,\n              color: \" #d5dee2\",\n              drawTicks: true,\n              drawOnChartArea: true,\n              circular: true\n            }\n          }]\n        },\n        legend: {\n          display: this.props.displayLegend,\n          position: this.props.legendPosition\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}\n\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  legendPosition: \"bottom\",\n  chartName: \"Git Issue\"\n};\nexport default Chart;","map":{"version":3,"sources":["/Users/tharminithalayasingam/Documents/hole React/2014-07-18/hh/reactcharts/reactcharts/src/components/Chart.jsx"],"names":["React","Component","Bar","axios","moment","withStyles","PageWrapper","root","padding","background","boxShadow","Paper","Chart","constructor","props","state","chartData","timeStamp","componentDidMount","getProductNamesURL","process","env","REACT_APP_HOST","REACT_APP_PORT","create","withCredentials","get","then","res","response","data","ProductName","map","e","L1IssueCount","L2IssueCount","L3IssueCount","setState","unix","format","labels","datasets","label","backgroundColor","catch","error","console","log","render","color","display","paddingTop","paddingLeft","flexFlow","fontWeight","chartInstance","chart","ctx","textAlign","textBaseline","forEach","dataset","i","meta","controller","getDatasetMeta","bar","index","fillText","_model","x","y","title","width","scales","xAxes","barPercentage","barThickness","maxBarThickness","minBarLength","gridLines","drawBorder","offsetGridLines","drawTicks","drawOnChartArea","circular","yAxes","legend","displayLegend","position","legendPosition","defaultProps","displayTitle","chartName"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the 'License'); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n *\n */\nimport React, { Component } from \"../../node_modules/react\";\nimport { Bar } from \"../../node_modules/react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst PageWrapper = withStyles({\n    root: {\n        padding: '30px',\n        background: 'transparent',\n        boxShadow: 'none'\n    }\n})(Paper);\n\n  \n\n//var randomColor = require(\"randomcolor\"); // import the script\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      timeStamp: \"\"\n    };\n  }\n\n\n  \n  static defaultProps = {\n    displayTitle: true,\n    displayLegend: true,\n    legendPosition: \"bottom\",\n    chartName: \"Git Issue\"\n  };\n\n  \n  componentDidMount() {\n    const getProductNamesURL =\n      \"http://\" +\n      process.env.REACT_APP_HOST +\n      \":\" +\n      process.env.REACT_APP_PORT +\n      \"/gitIssues/issueCount\";\n    axios\n      .create({\n        withCredentials: false\n      })\n      .get(getProductNamesURL)\n      .then(res => {\n        var response = res.data;\n        var ProductName = response.map(function(e) {\n          return e.ProductName;\n        });\n        var L1IssueCount = response.map(function(e) {\n          return e.L1IssueCount;\n        });\n        var L2IssueCount = response.map(function(e) {\n          return e.L2IssueCount;\n        });\n        var L3IssueCount = response.map(function(e) {\n          return e.L3IssueCount;\n        });\n\n        this.setState({\n            timeStamp: moment.unix(res.data[0]['TimeStamp'] / 1000).format('YYYY-MM-DD:hh:mm:ss'),\n            \n          chartData: {\n            labels: ProductName,\n            datasets: [\n              {\n                label: \"L1 IssueCount\",\n                data: L1IssueCount,\n                backgroundColor: '#d4c70e'\n              },\n              {\n                label: \"L2 IssueCount\",\n                data: L2IssueCount,\n                backgroundColor: '#d45810'\n              },\n              {\n                label: \"L3 IssueCount\",\n                data: L3IssueCount,\n                backgroundColor:'#920d08'\n              }\n            ]\n          }\n        });\n       \n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n        \n            \n            \n      <div className=\"chart\">\n          {this.state.timeStamp &&\n                <div style={{\n                    color: \"rgb(5, 80, 129)\",\n                    display: 'flex',\n                    paddingTop: \"10px\",\n                    paddingLeft: \"10px\",\n                    flexFlow: \"row-reverse\",\n                    fontWeight:\"bold\"\n                    \n                }}>\n                    <span> {this.state.timeStamp}</span>\n                     <span>Last Updated TimeStamp- </span>\n                </div>\n                }\n                \n        <Bar\n          data={this.state.chartData}\n          options={\n              {\n                \"hover\": {\n                    \"animationDuration\": 0\n                  },\n                  \"animation\": {\n                    \"duration\": 1,\n                    \"onComplete\": function() {\n                      var chartInstance = this.chart,\n                        ctx = chartInstance.ctx;\n                        ctx.textAlign = 'center';\n                        ctx.textBaseline = 'bottom';\n                        this.data.datasets.forEach(function(dataset, i) {\n                        var meta = chartInstance.controller.getDatasetMeta(i);\n                        meta.data.forEach(function(bar, index) {\n                          var data = dataset.data[index];\n                          if(data!==0)\n                          {\n                          ctx.fillText(data, bar._model.x, bar._model.y - 5);\n                          }\n                        });\n                      });\n                    }\n                  },\n            title: {\n              width: 320\n            },\n            scales: {\n              xAxes: [\n                {\n                  barPercentage: 1,\n                  barThickness: 43,\n                  maxBarThickness: 98,\n                  minBarLength: 0,\n                  gridLines: {\n                    display: true,\n                    drawBorder: true,\n                    offsetGridLines: true,\n                    color: \" #d5dee2\",\n                    drawTicks: true,\n                    drawOnChartArea: true,\n                    circular: true\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  barPercentage: 0.5,\n                  barThickness: 43,\n                  maxBarThickness: 48,\n                  minBarLength: 0,\n                  gridLines: {\n                    display: true,\n                    drawBorder: true,\n                    offsetGridLines: true,\n                    color: \" #d5dee2\",\n                    drawTicks: true,\n                    drawOnChartArea: true,\n                    circular: true\n                  }\n                }\n              ]\n            },\n            legend: {\n              display: this.props.displayLegend,\n              position: this.props.legendPosition\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}