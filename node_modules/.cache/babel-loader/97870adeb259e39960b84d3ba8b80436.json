{"ast":null,"code":"var _jsxFileName = \"/Users/tharminithalayasingam/Documents/hole React/2014-07-18/hh/reactcharts/reactcharts/src/components/Chart.jsx\";\n\n/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the 'License'); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n *\n */\nimport React, { Component } from \"../../node_modules/react\";\nimport { Bar } from \"../../node_modules/react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nvar randomColor = require(\"randomcolor\"); // import the script\n\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      timeStamp: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const getProductNamesURL = \"http://\" + process.env.REACT_APP_HOST + \":\" + process.env.REACT_APP_PORT + \"/gitIssues/issueCount\";\n    axios.create({\n      withCredentials: false\n    }).get(getProductNamesURL).then(res => {\n      var response = res.data;\n      var ProductName = response.map(function (e) {\n        return e.ProductName;\n      });\n      var L1IssueCount = response.map(function (e) {\n        return e.L1IssueCount;\n      });\n      var L2IssueCount = response.map(function (e) {\n        return e.L2IssueCount;\n      });\n      var L3IssueCount = response.map(function (e) {\n        return e.L3IssueCount;\n      });\n      this.setState({\n        timeStamp: moment.unix(res.data[0]['TimeStamp'] / 1000).format('YYYY-MM-DD:hh:mm:ss'),\n        chartData: {\n          labels: ProductName,\n          datasets: [{\n            label: \"L1 IssueCount\",\n            data: L1IssueCount,\n            backgroundColor: randomColor({\n              luminosity: \"bright\",\n              hue: \"blue\"\n            })\n          }, {\n            label: \"L2 IssueCount\",\n            data: L2IssueCount,\n            backgroundColor: randomColor({\n              luminosity: \"bright\",\n              hue: \"blue\"\n            })\n          }, {\n            label: \"L3 IssueCount\",\n            data: L3IssueCount,\n            backgroundColor: randomColor({\n              luminosity: \"bright\",\n              hue: \"blue\"\n            })\n          }]\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.timeStamp && React.createElement(\"div\", {\n      style: {\n        color: \"black\",\n        display: 'flex',\n        paddingTop: \"10px\",\n        paddingLeft: \"10px\",\n        flexFlow: \"row-reverse\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" \", this.state.timeStamp), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Last Updated TimeStamp- \")), React.createElement(Bar, {\n      data: this.state.chartData,\n      options: {\n        title: {\n          width: 320\n        },\n        scales: {\n          xAxes: [{\n            barPercentage: 1,\n            barThickness: 43,\n            maxBarThickness: 98,\n            minBarLength: 0,\n            gridLines: {\n              display: true,\n              drawBorder: true,\n              offsetGridLines: true,\n              color: \" #d5dee2\",\n              drawTicks: true,\n              drawOnChartArea: true,\n              circular: true\n            }\n          }],\n          yAxes: [{\n            barPercentage: 0.5,\n            barThickness: 43,\n            maxBarThickness: 48,\n            minBarLength: 0,\n            gridLines: {\n              display: true,\n              drawBorder: true,\n              offsetGridLines: true,\n              color: \" #d5dee2\",\n              drawTicks: true,\n              drawOnChartArea: true,\n              circular: true\n            }\n          }]\n        },\n        legend: {\n          display: this.props.displayLegend,\n          position: this.props.legendPosition\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  }\n\n}\n\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  legendPosition: \"bottom\",\n  chartName: \"Git Issue\"\n};\nexport default Chart;","map":{"version":3,"sources":["/Users/tharminithalayasingam/Documents/hole React/2014-07-18/hh/reactcharts/reactcharts/src/components/Chart.jsx"],"names":["React","Component","Bar","axios","moment","randomColor","require","Chart","constructor","props","state","chartData","timeStamp","componentDidMount","getProductNamesURL","process","env","REACT_APP_HOST","REACT_APP_PORT","create","withCredentials","get","then","res","response","data","ProductName","map","e","L1IssueCount","L2IssueCount","L3IssueCount","setState","unix","format","labels","datasets","label","backgroundColor","luminosity","hue","catch","error","console","log","render","color","display","paddingTop","paddingLeft","flexFlow","title","width","scales","xAxes","barPercentage","barThickness","maxBarThickness","minBarLength","gridLines","drawBorder","offsetGridLines","drawTicks","drawOnChartArea","circular","yAxes","legend","displayLegend","position","legendPosition","defaultProps","displayTitle","chartName"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the 'License'); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n *\n */\nimport React, { Component } from \"../../node_modules/react\";\nimport { Bar } from \"../../node_modules/react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nvar randomColor = require(\"randomcolor\"); // import the script\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      timeStamp: \"\"\n    };\n  }\n\n  static defaultProps = {\n    displayTitle: true,\n    displayLegend: true,\n    legendPosition: \"bottom\",\n    chartName: \"Git Issue\"\n  };\n\n  componentDidMount() {\n    const getProductNamesURL =\n      \"http://\" +\n      process.env.REACT_APP_HOST +\n      \":\" +\n      process.env.REACT_APP_PORT +\n      \"/gitIssues/issueCount\";\n    axios\n      .create({\n        withCredentials: false\n      })\n      .get(getProductNamesURL)\n      .then(res => {\n        var response = res.data;\n        var ProductName = response.map(function(e) {\n          return e.ProductName;\n        });\n        var L1IssueCount = response.map(function(e) {\n          return e.L1IssueCount;\n        });\n        var L2IssueCount = response.map(function(e) {\n          return e.L2IssueCount;\n        });\n        var L3IssueCount = response.map(function(e) {\n          return e.L3IssueCount;\n        });\n\n        this.setState({\n            timeStamp: moment.unix(res.data[0]['TimeStamp'] / 1000).format('YYYY-MM-DD:hh:mm:ss'),\n            \n          chartData: {\n            labels: ProductName,\n            datasets: [\n              {\n                label: \"L1 IssueCount\",\n                data: L1IssueCount,\n                backgroundColor: randomColor({\n                  luminosity: \"bright\",\n                  hue: \"blue\"\n                })\n              },\n              {\n                label: \"L2 IssueCount\",\n                data: L2IssueCount,\n                backgroundColor: randomColor({\n                  luminosity: \"bright\",\n                  hue: \"blue\"\n                })\n              },\n              {\n                label: \"L3 IssueCount\",\n                data: L3IssueCount,\n                backgroundColor: randomColor({\n                  luminosity: \"bright\",\n                  hue: \"blue\"\n                })\n              }\n            ]\n          }\n        });\n       \n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n        \n            \n            \n      <div className=\"chart\">\n          {this.state.timeStamp &&\n                <div style={{\n                    color: \"black\",\n                    display: 'flex',\n                    paddingTop: \"10px\",\n                    paddingLeft: \"10px\",\n                    flexFlow: \"row-reverse\"\n                }}>\n                    <span> {this.state.timeStamp}</span>\n                     <span>Last Updated TimeStamp- </span>\n                </div>\n                }\n                \n        <Bar\n          data={this.state.chartData}\n          options={{\n            title: {\n              width: 320\n            },\n            scales: {\n              xAxes: [\n                {\n                  barPercentage: 1,\n                  barThickness: 43,\n                  maxBarThickness: 98,\n                  minBarLength: 0,\n                  gridLines: {\n                    display: true,\n                    drawBorder: true,\n                    offsetGridLines: true,\n                    color: \" #d5dee2\",\n                    drawTicks: true,\n                    drawOnChartArea: true,\n                    circular: true\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  barPercentage: 0.5,\n                  barThickness: 43,\n                  maxBarThickness: 48,\n                  minBarLength: 0,\n                  gridLines: {\n                    display: true,\n                    drawBorder: true,\n                    offsetGridLines: true,\n                    color: \" #d5dee2\",\n                    drawTicks: true,\n                    drawOnChartArea: true,\n                    circular: true\n                  }\n                }\n              ]\n            },\n            legend: {\n              display: this.props.displayLegend,\n              position: this.props.legendPosition\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}